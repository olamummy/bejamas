import { useState, useEffect } from "react";
import { initializeApp } from "firebase/app";
import Head from "next/head";
import Image from "next/image";
import Button from "../components/Button";
import styles from "../styles/Home.module.css";
import utils from "../utils";
import firebaseApi from "./api/firebase";

const Home = () => {
  const [filtered, setFiltered] = useState([]);
  const [products, setProducts] = useState([]);
  const [cartModalActive, setCartModalActive] = useState(false);
  const [cartItems, setCartItems] = useState([]);
  const featured = products.filter((product) => product.featured === true)[0];

  useEffect(() => {
    getData();
  }, []);

  const getData = async () => {
    const productList = await firebaseApi.getProducts();
    setProducts(productList);
  };

  const handleAddToCart = (product) => {
    setCartItems(cartItems.concat(product));
    setCartModalActive(true);
  };

  const handleFilter = (e) => {
    if (e.target.checked) {
      const data = products.filter(
        (prod) => prod.category === e.target.getAttribute("id")
      );
      return setFiltered(data);
    }

    setFiltered([]);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Bejamas - Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <nav className={styles.nav}>
        <span className={styles.logo}></span>
        <div
          className={styles.cart}
          onClick={() => setCartModalActive(!cartModalActive)}
        >
          <span className={styles.badge}>{cartItems.length}</span>
        </div>
        {cartModalActive && (
          <div className={styles.cartModal}>
            <p
              className={styles.xIcon}
              onClick={() => setCartModalActive(false)}
            ></p>
            <div className={styles.modalContent}>
              {cartItems.map((item) => (
                <div className={styles.cardItem} key={item.id}>
                  <div>
                    <p className={styles.cartItemTitle}>{item.name}</p>
                    <p className={styles.cartItemPrice}>${item.price}</p>
                  </div>
                  <Image
                    src={item.image.src}
                    alt="cart item"
                    width={80}
                    height={50}
                    objectFit="cover"
                    placeholder="blur"
                    blurDataURL={item.image.src}
                  />
                </div>
              ))}
              {cartItems.length === 0 && (
                <span className={styles.cartEmpty}>Empty Cart</span>
              )}
            </div>
            <Button
              title="Clear"
              style={customStyles.clearCartButton}
              textStyle={customStyles.clearText}
              onClick={() => {
                setCartItems([]);
                setCartModalActive(false);
              }}
            />
          </div>
        )}
      </nav>

      <p className={styles.hr}></p>

      <section className={styles.bannerContainer}>
        <div className={styles.bannerHead}>
          <p className={styles.bannerTitle}>{featured?.name}</p>
          <Button
            title="Add to Cart"
            onClick={() => handleAddToCart(featured)}
          />
        </div>
        <div className={styles.bannerImageContainer}>
          <div
            className={styles.banner}
            style={{
              backgroundImage: `url('${featured?.image.src}')`,
              backgroundSize: "90vw",
              backgroundRepeat: "no-repeat",
              objectFit: "cover",
            }}
          ></div>
          <p className={styles.caption}>Photo of the Day</p>
        </div>
      </section>

      <section className={styles.aboutContainer}>
        <div className={styles.aboutLeft}>
          <p className={styles.aboutTitle}>About the {featured?.name}</p>
          <p className={styles.aboutSubtitle}>{featured?.category}</p>
          <p className={styles.about}>{featured?.details.description}</p>
        </div>

        <div className={styles.aboutRight}>
          <p className={styles.recommendationTitle}>People also buy</p>
          <div className={styles.recommendedProducts}>
            {featured?.details.recommendations.map((item) => (
              <div className={styles.img}>
                <Image
                  src={item.src}
                  alt={item.alt}
                  width={115}
                  height={150}
                  objectFit="cover"
                  placeholder="blur"
                  blurDataURL={item.src}
                />
              </div>
            ))}
          </div>
          <div className={styles.recomendationDetail}>
            <p className={styles.recommendationTitleII}>Details</p>
            <p className={styles.recommendedSize}>
              Size: {featured?.details.dimensions.width} x
              {featured?.details.dimensions.height} pixels
            </p>
            <p className={styles.recommendedSize}>
              Size: {utils.toMB(featured?.details.size)} mb
            </p>
          </div>
        </div>
      </section>

      <p className={styles.hr}></p>

      <main className={styles.main}>
        <div className={styles.mainHead}>
          <div className={styles.breadcrumb}>
            <span>Photography</span> / <span>Premium Photos</span>
          </div>
          <div className={styles.actions}>
            <div>
              <p className={styles.filterIcon}></p>
              <span className={styles.sort}>Sort By</span>
            </div>
            <div>
              <span>Price</span>
              <p className={styles.arrowDownIcon}></p>
            </div>
          </div>
        </div>
        <div className={styles.mainContent}>
          <div className={styles.categoriesContainer}>
            <p className={styles.categoryTitle}>Category</p>
            <div className={styles.categories}>
              <label htmlFor="people" className={styles.checkboxContainer}>
                <input
                  type="checkbox"
                  className={styles.checkbox}
                  id="people"
                  onChange={(e) => handleFilter(e)}
                />
                <span>People</span>
              </label>
              <label htmlFor="premium" className={styles.checkboxContainer}>
                <input
                  type="checkbox"
                  className={styles.checkbox}
                  id="premium"
                  onChange={handleFilter}
                />
                <span>Premium</span>
              </label>
              <label htmlFor="pets" className={styles.checkboxContainer}>
                <input
                  type="checkbox"
                  className={styles.checkbox}
                  id="pets"
                  onChange={handleFilter}
                />
                <span>Pets</span>
              </label>
              <label htmlFor="food" className={styles.checkboxContainer}>
                <input
                  type="checkbox"
                  className={styles.checkbox}
                  id="food"
                  onChange={handleFilter}
                />
                <span>Food</span>
              </label>
              <label htmlFor="landmarks" className={styles.checkboxContainer}>
                <input
                  type="checkbox"
                  className={styles.checkbox}
                  id="landmarks"
                  onChange={handleFilter}
                />
                <span>Landmarks</span>
              </label>
              <label htmlFor="cities" className={styles.checkboxContainer}>
                <input
                  type="checkbox"
                  className={styles.checkbox}
                  id="cities"
                  onChange={handleFilter}
                />
                <span>Nities</span>
              </label>
              <label htmlFor="nature" className={styles.checkboxContainer}>
                <input
                  type="checkbox"
                  className={styles.checkbox}
                  id="nature"
                  onChange={handleFilter}
                />
                <span>Nature</span>
              </label>
            </div>

            <p className={styles.hrSmall}></p>
            <div className={styles.categoryContainerII}>
              <p className={styles.categoryTitle}>Price Range</p>
              <div className={styles.categoriesII}>
                <label htmlFor="less20" className={styles.checkboxContainer}>
                  <input
                    type="checkbox"
                    className={styles.checkbox}
                    id="lessthan20"
                  />
                  <span>Lower than $20</span>
                </label>
                <label htmlFor="20to100" className={styles.checkboxContainer}>
                  <input
                    type="checkbox"
                    className={styles.checkbox}
                    id="20to100"
                  />
                  <span>$20 - $100</span>
                </label>
                <label htmlFor="100to200" className={styles.checkboxContainer}>
                  <input
                    type="checkbox"
                    className={styles.checkbox}
                    id="100to200"
                  />
                  <span>$100 - $200</span>
                </label>
                <label
                  htmlFor="morethan200"
                  className={styles.checkboxContainer}
                >
                  <input
                    type="checkbox"
                    className={styles.checkbox}
                    id="morethan200"
                  />
                  <span>More than $200</span>
                </label>
              </div>
            </div>
          </div>
          <div className={styles.products}>
            {(filtered.length > 0 ? filtered : products).map((product) => (
              <div className={styles.card}>
                <div>
                  {product.bestseller && (
                    <span className={styles.bestseller}>Best Seller</span>
                  )}
                  <Image
                    alt="product"
                    quality={100}
                    width={262.02}
                    height={330.72}
                    objectFit="cover"
                    placeholder="blur"
                    src={product.image.src}
                    blurDataURL={product.image.src}
                  />
                  <Button
                    title="Add to card"
                    style={customStyles.button}
                    onClick={() => handleAddToCart(product)}
                  />
                </div>
                <div className={styles.productDetail}>
                  <p className={styles.productCategory}>{product.category}</p>
                  <p className={styles.productName}>{product.name}</p>
                  <p className={styles.productPrice}>${product.price}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </main>
      <footer className={styles.footer}></footer>
    </div>
  );
};

const customStyles = {
  button: {
    width: "262.02px",
    marginTop: "-4px",
  },
  clearCartButton: {
    width: "250px",
    height: "40px",
    "align-self": "center",
    outline: "solid #000 2px",
    "background-color": "#fff",
  },
  clearText: {
    color: "#000",
  },
};

export default Home;
